Homing-bird is a convenience wrapper to create an erlang-esque messaging
queue for python. It uses zeromq as its messaging backend.

1.) Install zeromq from www.zeromq.org and pyzmq from https://github.com/zeromq/pyzmq
2.) Run python setup.py install

USAGE:
#create a thread that calls a function when a message is received
>>> from homingbird import ZmqThread
>>> def echo(msg, defaults):
        print msg

>>> z = ZmqThread(echo)
#send a message
>>> z << "Message" # (or z.call(z.bind, "Message") for now if you don't like << )
Message

The ZmqThread takes a few attributes:
supervisor -> A ZmqThread that this thread reports to, either errors or start/exit status
daemon -> The python threading daemon attribute. default is true
bind -> The Zmq binding string. Currently an inproc with zmqthread- and the hash of the dict.
        You may change this to enable cross-process communication. Just send the correct bind to
        ZmqThread.call to place the call.

